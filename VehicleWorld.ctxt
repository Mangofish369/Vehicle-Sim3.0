#BlueJ class context
comment0.target=VehicleWorld
comment0.text=\r\n\ Welcome\ to\ the\ traffic\ simulation;\ Created\ by\ Vincent\ Li,\ October\ 25,\ 2023\r\n\ \r\n\ Within\ the\ 8\ lanes,\ cars\ and\ pedestrians\ generally\ follow\ traffic\ control\ for\ smooth\ driving.\r\n\ However\ every\ so\ often,\ a\ speed\ freak\ (we\ all\ know\ so\ well)\ may\ spawn,\ ignoring\ all\ traffic\ rules\ and\ running\ over\ red\ lights.\r\n\ This\ promonts\ a\ police\ car\ to\ chase\ after\ the\ speed\ freak,\ and\ ironiclly\ the\ police\ will\ also\ break\ all\ the\ rules\ in\ order\ to\ \r\n\ catch\ this\ car.\r\n\ \r\n\ To\ add\ some\ visual\ elements,\ rain\ will\ occur\ every\ 10\ -\ 16\ sec,\ and\ slow\ down\ all\ vehicles\ briefly\ \r\n\ Traffic\ lights\ change\ automatically,\ the\ time\ period\ is\ set\ to\ allow\ some\ clutter\ of\ vehicles\ and\ pedestrains.\ \r\n\ Cars\ will\ change\ lanes\ modestly\ if\ they\ feel\ the\ need\ to,\ speeding\ cars\ and\ police\ will\ violently\ change\ lanes\ to\ ensure\ they\r\n\ maintain\ as\ much\ speed\ as\ possible.\r\n\ \r\n\ Side\ note\:\ A\ mouse\ pointer\ is\ also\ created\ for\ you\!\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -->\ To\ find\ the\ coordinates\ of\ your\ mouse\ press\ 'n'\r\n\ \r\n\ \r\n\ Credits\:\r\n\ -----------------------------------Art\ work-----------------------------------\r\n\ \r\n\ Image\ of\ Biker\r\n\ -\ Designed\ by\:\ flatvectors\r\n\ -\ Found\ on\:\ Adobe\ Stock.com\r\n\ https\://stock.adobe.com/ca/search/images?filters%5Bcontent_type%3Aphoto%5D\=1&filters%5Bcontent_type%3Aillustration%5D\=1&filters%5Bcontent_type%3Azip_vector%5D\=1&filters%5Bcontent_type%3Avideo%5D\=0&filters%5Bcontent_type%3Atemplate%5D\=0&filters%5Bcontent_type%3A3d%5D\=0&filters%5Bcontent_type%3Aaudio%5D\=0&filters%5Binclude_stock_enterprise%5D\=0&filters%5Bis_editorial%5D\=0&filters%5Bfree_collection%5D\=0&order\=relevance&serie_id\=493870822&asset_id\=364064825\r\n\ \r\n\ Image\ of\ Traffic\ Lights\r\n\ -\ Designed\ by\:\ bubaone\r\n\ -\ Found\ on\:\ iStock.com\r\n\ https\://www.istockphoto.com/vector/led-modern-street-traffic-lights-background-gm165818773-18626367\r\n\ \r\n\ Image\ of\ white\ line\r\n\ -\ Author\ Unknown\r\n\ -\ Found\ on\:\ CITYPNG.com\r\n\ https\://www.citypng.com/photo/17303/horizontal-white-line\r\n\ \r\n\ Image\ of\ police\ car\r\n\ -\ Designed\ by\:\ Topgeek\r\n\ -\ Found\ on\:\ Dreamstime.com\r\n\ https\://www.dreamstime.com/modern-army-truck-police-car-pixel-game-design-military-technics-force-heavy-equipment-modern-army-truck-police-car-image213411909\r\n\ \r\n\ \r\n\ -----------------------------------Code-----------------------------------\r\n\ Simple\ Timer\ Class\:\r\n\ -\ Designed\ by\:\ Neil\ Brown\r\n\ -\ Downloaded\ from\:\ Greenfoot\ ide\r\n\ \r\n\ World\ &\ Actor\ Class\:\r\n\ -\ Found\ on\ Greenfoot\r\n\ \r\n\ Vehicle\ Similation\ Starter\ Code\:\r\n\ -\ Designed\ by\:\ Jordan\ Cohen\r\n\ -\ Found\ by\ taking\:\ ICS4U1-01\r\n\ \r\n\ Additionally\ Borrowed\ from\ Jordan\ Cohen\:\r\n\ -\ Storm\ Demo\r\n\ -\ Bus\ Stop\ Demo\r\n\ -\ Sound\ Demo\r\n\ -\ Sound\ Effects\ Slideshow\r\n\ -\ Collision\ Detection\ Slideshow\r\n\ -----------------------------------Sound-----------------------------------\r\n\ Car\ honking\r\n\ -\ Designed\ by\:\ Jacob\ Bowerman\ <--\ on\ Youtube\r\n\ -\ Downloaded\ on\:\ MediaFire.com\r\n\ https\://www.youtube.com/watch?v\=pNoGHcIHzYo\ (Source)\r\n\ https\://www.mediafire.com/file/bw8twrv6t9p8y1i/car_beep.wav/file\ (Download)\r\n\ \r\n\ Driving\ in\ the\ rain\r\n\ -\ Author\ Unknown\r\n\ -\ Found\ on\:\ mixkit.co\r\n\ https\://mixkit.co/free-sound-effects/traffic/\r\n\ \r\n
comment1.params=
comment1.target=VehicleWorld()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ MyWorld.\r\n\ \r\n\ Note\ that\ the\ Constrcutor\ for\ the\ default\ world\ is\ always\ called\r\n\ when\ you\ click\ the\ reset\ button\ in\ the\ Greenfoot\ scenario\ screen\ -\r\n\ this\ is\ is\ basically\ the\ code\ that\ runs\ when\ the\ program\ start.\r\n\ Anything\ that\ should\ be\ done\ FIRST\ should\ go\ here.\r\n\ \r\n
comment10.params=world\ target\ spawners\ startY\ heightPerLane\ lanes\ spacing\ twoWay\ centreSplit\ centreSpacing
comment10.target=int[]\ prepareLanes(greenfoot.World,\ greenfoot.GreenfootImage,\ VehicleSpawner[],\ int,\ int,\ int,\ int,\ boolean,\ boolean,\ int)
comment11.params=actorsToSort\ world
comment11.target=void\ zSort(java.util.ArrayList,\ greenfoot.World)
comment11.text=\r\n\ A\ z-sort\ method\ which\ will\ sort\ Actors\ so\ that\ Actors\ that\ are\r\n\ displayed\ "higher"\ on\ the\ screen\ (lower\ y\ values)\ will\ show\ up\ underneath\r\n\ Actors\ that\ are\ drawn\ "lower"\ on\ the\ screen\ (higher\ y\ values),\ creating\ a\r\n\ better\ perspective.\ \r\n
comment12.params=world\ target\ spawners\ startY\ heightPerLane\ lanes\ spacing\ twoWay\ centreSplit
comment12.target=int[]\ prepareLanes(greenfoot.World,\ greenfoot.GreenfootImage,\ VehicleSpawner[],\ int,\ int,\ int,\ int,\ boolean,\ boolean)
comment12.text=\r\n\ <p>The\ prepareLanes\ method\ is\ a\ static\ (standalone)\ method\ that\ takes\ a\ list\ of\ parameters\ about\ the\ desired\ roadway\ and\ then\ builds\ it.</p>\r\n\ \r\n\ <p><b>Note\:</b>\ So\ far,\ Centre-split\ is\ the\ only\ option,\ regardless\ of\ what\ values\ you\ send\ for\ that\ parameters.</p>\r\n\r\n\ <p>This\ method\ does\ three\ things\:</p>\r\n\ <ul>\r\n\ \ <li>\ Determines\ the\ Y\ coordinate\ for\ each\ lane\ (each\ lane\ is\ centered\ vertically\ around\ the\ position)</li>\r\n\ \ <li>\ Draws\ lanes\ onto\ the\ GreenfootImage\ target\ that\ is\ passed\ in\ at\ the\ specified\ /\ calculated\ positions.\ \r\n\ \ \ \ \ \ \ (Nothing\ is\ returned,\ it\ just\ manipulates\ the\ object\ which\ affects\ the\ original).</li>\r\n\ \ <li>\ Places\ the\ VehicleSpawners\ (passed\ in\ via\ the\ array\ parameter\ spawners)\ into\ the\ World\ (also\ passed\ in\ via\ parameters).</li>\r\n\ </ul>\r\n\ \r\n\ <p>\ After\ this\ method\ is\ run,\ there\ is\ a\ visual\ road\ as\ well\ as\ the\ objects\ needed\ to\ spawn\ Vehicles.\ Examine\ the\ table\ below\ for\ an\r\n\ in-depth\ description\ of\ what\ the\ roadway\ will\ look\ like\ and\ what\ each\ parameter/component\ represents.</p>\r\n\ \r\n\ <pre>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <\=\=\=\ Start\ Y\r\n\ \ ||||||||||||||\ \ <\=\=\=\ Top\ Border\r\n\ \ /------------\\\r\n\ \ |\ \ \ \ \ \ \ \ \ \ \ \ |\ \ \r\n\ \ |\ \ \ \ \ \ Y[0]\ \ |\ \ <\=\=\=\ Lane\ Position\ (Y)\ is\ the\ middle\ of\ the\ lane\r\n\ \ |\ \ \ \ \ \ \ \ \ \ \ \ |\r\n\ \ \\------------/\r\n\ \ [\#\#]\ [\#\#]\ [\#\#|\ <\=\=\ spacing\ (\ where\ the\ lane\ lines\ or\ borders\ are\ )\r\n\ \ /------------\\\r\n\ \ |\ \ \ \ \ \ \ \ \ \ \ \ |\ \ \r\n\ \ |\ \ \ \ \ \ Y[1]\ \ |\r\n\ \ |\ \ \ \ \ \ \ \ \ \ \ \ |\r\n\ \ \\------------/\r\n\ \ ||||||||||||||\ \ <\=\=\ Bottom\ Border\r\n\ </pre>\r\n\ \r\n\ @param\ world\ \ \ \ \ The\ World\ that\ the\ VehicleSpawners\ will\ be\ added\ to\r\n\ @param\ target\ \ \ \ The\ GreenfootImage\ that\ the\ lanes\ will\ be\ drawn\ on,\ usually\ but\ not\ necessarily\ the\ background\ of\ the\ World.\r\n\ @param\ spawners\ \ An\ array\ of\ VehicleSpawner\ to\ be\ added\ to\ the\ World\r\n\ @param\ startY\ \ \ \ The\ top\ Y\ position\ where\ lanes\ (drawing)\ should\ start\r\n\ @param\ heightPerLane\ The\ height\ of\ the\ desired\ lanes\r\n\ @param\ lanes\ \ \ \ \ The\ total\ number\ of\ lanes\ desired\r\n\ @param\ spacing\ \ \ The\ distance,\ in\ pixels,\ between\ each\ lane\r\n\ @param\ twoWay\ \ \ \ Should\ traffic\ flow\ both\ ways?\ Leave\ false\ for\ a\ one-way\ street\ (Not\ Yet\ Implemented)\r\n\ @param\ centreSplit\ \ \ Should\ the\ whole\ road\ be\ split\ in\ the\ middle?\ Or\ lots\ of\ parallel\ two-way\ streets?\ Must\ also\ be\ two-way\ street\ (twoWay\ \=\=\ true)\ or\ else\ NO\ EFFECT\r\n\ \r\n
comment2.params=
comment2.target=void\ started()
comment3.params=
comment3.target=void\ stopped()
comment4.params=
comment4.target=void\ act()
comment5.params=
comment5.target=void\ spawn()
comment6.params=
comment6.target=void\ changeTraffic()
comment7.params=
comment7.target=java.lang.String\ checkLight()
comment8.params=lane
comment8.target=int\ getLaneY(int)
comment8.text=\r\n\ \ Given\ a\ lane\ number\ (zero-indexed),\ return\ the\ y\ position\r\n\ \ in\ the\ centre\ of\ the\ lane.\ (doesn't\ factor\ offset,\ so\ \r\n\ \ watch\ your\ offset,\ i.e.\ with\ Bus).\r\n\ \ \r\n\ \ @param\ lane\ the\ lane\ number\ (zero-indexed)\r\n\ \ @return\ int\ the\ y\ position\ of\ the\ lane's\ center,\ or\ -1\ if\ invalid\r\n
comment9.params=y
comment9.target=int\ getLane(int)
comment9.text=\r\n\ Given\ a\ y-position,\ return\ the\ lane\ number\ (zero-indexed).\r\n\ Note\ that\ the\ y-position\ must\ be\ valid,\ and\ you\ should\ \r\n\ include\ the\ offset\ in\ your\ calculations\ before\ calling\ this\ method.\r\n\ For\ example,\ if\ a\ Bus\ is\ in\ a\ lane\ at\ y\=100,\ but\ is\ offset\ by\ -20,\r\n\ it\ is\ actually\ in\ the\ lane\ located\ at\ y\=80,\ so\ you\ should\ send\r\n\ 80\ to\ this\ method,\ not\ 100.\r\n\ \r\n\ @param\ y\ -\ the\ y\ position\ of\ the\ lane\ the\ Vehicle\ is\ in\r\n\ @return\ int\ the\ lane\ number,\ zero-indexed\r\n\ \r\n
numComments=13
